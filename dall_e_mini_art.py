# -*- coding: utf-8 -*-
"""dall-e_mini_art.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Xehj-VHdLy-eC7GFWXUQHyqBrEgm2-54
"""

!pip install min-dalle

from IPython.display import display, update_display # We use this to display images
import torch
from min_dalle import MinDalle # Dall-E Mini library

model = MinDalle(
    dtype = torch.float16, # float16 is faster than float 32, though float 32 will generate better images
    device = 'cuda',
    is_mega = True, # Small model for faster inference, Mega for better results
    is_reusable = True
)

# Parameters
text = "Beautiful librarian by Jeremy Mann, Rutkowski, Rey Artgerm, other Artstation illustrators, intricate details, portrait, face, closeup, headshot, mugshot, illustration, UHD, 4K"
progressive_outputs = True # This will keep generating and improving the images
seamless = True
grid_size = 3 # Generates 3x3 grid of images
temperature = 1
supercondition_factor = 32
top_k = 256

image_stream = model.generate_image_stream(
    text = text,
    seed = -1,
    grid_size = grid_size,
    progressive_outputs = progressive_outputs,
    is_seamless = seamless,
    temperature = temperature,
    top_k = int(top_k),
    supercondition_factor = supercondition_factor,
)

# Display the images
is_first = True
for image in image_stream:
  display_func = display if is_first else update_display # Displaying images if there's no output, otherwise refresh with new images
  display_func(image, display_id = 1)
  is_first = False # Subsequent iterations will use update_display

# Setting is_mega to true can result in much more accurate images
# Playing around with the wording of the prompt can also result in better images, along with changing the parameters
# That's it, folks!